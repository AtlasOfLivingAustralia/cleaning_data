---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Taxonomy {#sec-standardise-taxonomy}

```{r, setup, include=FALSE}

knitr::opts_chunk$set(
  comment = '', 
  fig.width = 6, 
  fig.height = 6,
  eval = TRUE,
  echo = TRUE,
  warning = FALSE,
  message = FALSE
)

options(tidyverse.quiet = TRUE)

library(arrow)
library(tidyverse)
```

```{r loaddata, include=FALSE}

# inverts <- open_dataset("../data_cleaning_workflows/ignore/Curated_Plant_and_Invertebrate_Data_for_Bushfire_Modelling/invertebrate.data.csv", format = "csv")
# 
# inverts %>% 
#   filter(family == "apidae") %>% 
#   write_parquet(sink = "data/dap/bees.parquet")

bees <- read_parquet("data/dap/bees.parquet")

plants <- read_csv("../data_cleaning_workflows/ignore/Curated_Plant_and_Invertebrate_Data_for_Bushfire_Modelling/vascularplant.data.csv")

plants %>%
  select(record_id:longitude_used) %>%
  rename(latitude = latitude_used,
         longitude = longitude_used) %>%
  sample_frac(0.05) %>%
  write_csv_arrow(sink = "data/dap/plants_subset.csv")

plants <- read_csv("data/dap/plants_subset.csv")

### Making some fake missing data
set.seed(5)
tobemissing <- plants %>%
  filter(order == "Fabales") %>%
  sample_frac(0.15) %>%
  pull(scientific_name) %>%
  unique()

plants <- plants %>%
  mutate(order = ifelse(scientific_name %in% tobemissing, NA, order)) # 40 species

```

Advances in taxonomy, especially in molecular biology has allowed researchers to describe new species more efficiently than ever before [@garraffoni2019integrative]. Modern approaches has also enabled reclassification of organisms that have been incorrectly described in the past. Unfortunately, multiple names (synonyms) for the same organism can arise when taxonomy is not unanimously agreed upon by researchers. The complex and dynamic nature of taxonomy makes working with biodiversity data challenging. In this chapter we will go through some approaches with cleaning taxonomic data and dealing with synonyms. 

<!-- Outline of section:  -->
<!-- Synonyms what are they and why is it a problem
<!-- solution -->
<!--  Clean:  never will be perfect, so long as your process and decisions are  and documented and transparent consistent --> 
<!-- taxonomy preclean -->
<!--     synonyms standardisation -->
<!--     taxonomic input from experts -->


## Taxonomy preclean 

Similar to what we did in the previous chapter, we will apply a broad sweep pre-clean to taxonomic data. This will make dealing with synonyms go as smoothly as possible.

The process is to first identify the issue, correct it, check it, and then document the changes. The goal is to standardise and correct as many errors issues before removing records. 

### Higher taxonomy 

Higher taxonomy such as phylum and class may be used to group species for analysis or data visualisations. Its important to check the spelling and formatting of these columns. 
Its always good to start with some a useful table of counts for each taxonomic level. Keep an eye out for spelling errors, formatting issues and missing data. Note that `NA` in the output represents missing

As an example:

```{r}
library(tidyverse)
library(janitor)

plants %>% 
  pull(class) %>% 
  tabyl()

plants %>% 
  pull(order) %>% 
  tabyl() %>% 
  head()

plants %>% 
  pull(genus) %>% 
  tabyl() %>% 
  tail()
```

#### Missing higher taxonomy {.unnumbered}

If you noticed you have missing data in these columns, you can usually back fill this information using your [chosen naming authority](link back to section) or retrieving this information from a living atlas such as the ALA. 

The code below demonstrates how you can isolate the `scientific_names` of taxa with missing XX data and getting taxonomic information from ALA

(Example WORK IN PROGRESS, need better fake data, Inverts?)
Seperate chunk where message = TRUE for hits
```{r}
library(galah)

# These are the taxa missing `genus` information
to_search <- plants %>% 
  filter(is.na(order)) %>% 
  select(species) %>% 
  distinct()

to_search

search_taxa(to_search)
```

#### Insufficient taxonomic rank {.unnumbered}

If a record is not identified down to the taxonomic level that needed for the study e.g. species, then the record should be removed.

(Remember to go back to download or scope section to tell users to download taxonRank)

During your data download, ensure you have requested for the column [`taxonRank`](https://dwc.tdwg.org/terms/#dwc:taxonRank), this variable tells us the taxonomic rank of the most specific name in the scientificName.

(Come back to this example, perhaps needs spatial focus in a given area and then download everything in there and exclude anything that taxonRank is not species)

```{r}


```

#### Inconsistent taxonomy

```{r}
# Orchid as an example 
# Read in problem child data and show

# Group by species and count unique values for higher taxonomy
```

### Capitalisation 

Normally higher taxonomy are capitalised e.g. Myrtaceae or Aves. Capitalisation errors are usually quick to spot when you print the data object. Alternatively you can try using `str_subset` on columns you expect to have capital letters. 

The code below subsets out unique values for the variable `class` that have upper case letters. Notice that no matches are found

```{r}
library(tidyverse)

str_subset(unique(bees$class), "[:upper:]")
```

We can confirm that there are no upper case matches by subsetting unique values that have lower case letters to see what is going on. This shows us that Insecta is inputted entirely in lowercase.

```{r}
str_subset(unique(bees$class), "[:lower:]") 
```

We can correct the lower case formatting as below, remember to check the fix before overwriting/removing the erroneous column(s)

```{r}
bees %>% 
  mutate(class_corrected = str_to_sentence(class)) %>%
  select(starts_with("class"))

bees_corrected <- bees %>% 
  mutate(class_corrected = str_to_sentence(class)) %>% 
  select(-class) %>% # Remove erroreous column 
  rename(class = class_corrected) # Rename corrected column as the new 'class'
```

### Seperators

In a taxonomic data, separators such as, spaces and underscore are found in scientific names and are used to delineate the genus and [species name](https://dwc.tdwg.org/terms/#dwc:specificEpithet). While it is personal choice which separator you use, it is good practice to be consistent with your choice. Consistency ensures that unique values of scientific name truly reflects unique species and not due to inconsistencies. 

Try `tabyl-ing` your taxonomic columns to check if you have any inconsistencies first

```{r}
plants %>% 
  pull(scientific_name) %>% 
  tabyl() %>% 
  tibble()
```

Consistent taxonomic formatting may not be an issue if you are downloading data from one single source such as the ALA where scientific names are already formatted consistently e.g. "Moloch horridus". This may not be the case when consolidating data from multiple sources.

Below is code to create an underscore scientific name from one that is separated with a space. Remember to check your changes

```{r}
plants_updated <- plants %>% 
  mutate(scientific_name_undersc = str_replace_all(scientific_name, " ", "_")) 

plants_updated %>% 
  pull(scientific_name_undersc) %>% 
  tabyl() %>% 
  tibble()
```

## Synonyms

Synonyms are not straightforward when working with open source biodiversity data. Data infrastructures have their own taxonomic systems which may not be accepted by researchers or consistent with your chosen [naming authority](link_back). For these reasons, its important to flag and correct synonyms in a clear manner while keeping in mind that there is no universal or perfect solution. We recommend being explicit and consistent with your decisions about synonyms and keeping a good record of the changes to aid transparency and reproducibility. 

Often naming authorities will have one they deem as accepted, and list others as synonyms. Here is an [example](https://biodiversity.org.au/afd/taxa/Egernia/names) (How do people retrieve these from the AFD?)


{Taxize}



## Input from experts

### Australian taxonomic society groups

**VERTEBRATES**

-   Amphibians and reptiles - [Australian Herpetological Society](https://ahs.org.au/)\
-   Birds - [Birdlife Australia](https://www.birdlife.org.au/)\
-   Fish - [Australian Society for Fish Biology](https://www.asfb.org.au/)\
-   Mammals - [The Australian Mammal Society](https://australianmammals.org.au/)

**INVERTEBRATES**

-   Arachnology - [Australasian Arachnological Society](www.australasianarachnologicalsociety.org)\
-   Entomology - [Australian Entomological Society](https://www.austentsoc.org.au/)\
-   Malacology - [The Malacological Society of Australasia](https://www.malsocaus.org/)\
-   Nematology - [Australasian Association of Nematologists](https://www.nematologists.org.au/)

### Global taxonomy 

-   GBIF uses 100 different sources to assemble - [their global taxonomic backbone](https://www.gbif.org/dataset/d7dddbf4-2cf0-4f39-9b2a-bb099caae36c)

-   Authoritative taxonomic information on plants, animals, fungi, and microbes - [Integrated Taxonomic Information System, ITIS](https://www.itis.gov/)

-   Global taxonomic catalogue 

- [Catalogue of Life](https://www.catalogueoflife.org/)


## Notes

#### This has lots all meaning

1.  Downloading higher taxon data (kingdom:class) and then filtering for what you need, as disparities are less common at higher levels (???? Check with Martin)
