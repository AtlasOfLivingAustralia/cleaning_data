---
editor: 
  markdown: 
    wrap: 72
code-annotations: hover
number-depth: 3
editor_options: 
  chunk_output_type: console
---

<!-- I'm not certain if you're still trying to make a decision about this chapter - having skimmed it, I'm not clear on what the example actually is... -SB -->

<!-- IMPORTANT NOTE:
This chapter used to have lots of examples of biological filters one could use. After thinking about it more, this chapter felt more like a strange collection of examples of fields people might not know about (but for good reason because the data was pretty sparse) or VERY bespoke filtering workflows using confusing or technical examples. I have moved relevant information elsewhere and deleted many examples because they didn't work the way they were advertised originally.

I have kept this one Extinct Species example because it seems like a cool list, but the example is very technical compared to most of the book. I'm not certain whether it should be kept anywhere, but the other examples have been deleted.
- DK
-->


# Biological filtering

### Prerequisites

In this chapter we will use several datasets:

  * a subset of plant occurrence records taken from the [Curated Plant and Invertebrate Data for Bushfire Modelling data set](https://data.csiro.au/collection/csiro:56679)

```{r}
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(janitor)
library(galah)
library(here)

galah_config(email = Sys.getenv("ALA_EMAIL"),
             username = Sys.getenv("GBIF_USERNAME"),
             password = Sys.getenv("GBIF_PWD"),
             verbose = FALSE)

plants <- arrow::open_dataset("../data/dap/plants_subset") |> 
  dplyr::collect()
```

:::{.aside}

<img class = "rounded" src="https://ala-images.s3.ap-southeast-2.amazonaws.com/store/0/5/6/a/ca48dfdd-15b3-4ac5-a392-cf5f93a6a650/original"></img>

::: {.figure-caption}
[*Paralaoma mucoides* on a rock.<br>Photo by Nick Porch CC-BY-NC 4.0 (Int)](https://biocache.ala.org.au/occurrences/8a44a8df-2819-45d4-b8c5-e6dc7629e0fe)
:::

:::


## Extinct species

<!-- 
This is an incredibly complex example that I think comes from Fonti's Inverts Australia work. Impressive as it is, are we definite that it's worth the effort to include it? How many people want to know how to do this?
It's not helped that the IUCN example no longer works.
-->

<!-- 
My new opinion is...the same. This is such a complex example that might be too difficult to demonstrate given this might be the only relevant example in this chapter. And it requires 2 datasets we have to load locally. If it stays, it needs tweaking.
-->

In most cases, filtering data to a recent year range (e.g., > 2010) should
remove *most* extinct species. Nevertheless, it can be important to cross
check for extinct species. 

As an example, we can do this using the Interim Register of
Marine and Nonmarine Genera [(IRMNG)](https://www.irmng.org/), a list which 
compiles both living and extinct biota into a single list. The list
is comprehensive and actively maintained. However, much of the data
doesn't go down to species level. As such, we recommend using the
following approach to find *potentially extinct* taxa and further
investigate the records that are flagged.

The required files are organised by year and can be downloaded from
[here](https://www.irmng.org/export/) then unzipped within your project
directory. We'll read them into R using arrow (see [Large Datasets](LINK to chapter)).

```{r}
irmng_taxa <- arrow::open_dataset(here("data", "lists", "IRMNG_genera_DwCA_2023-05-19", "taxon_subset")) |>
  collect() |>
  as_tibble()

irmng_sp <- arrow::open_dataset(here("data", "lists", "IRMNG_genera_DwCA_2023-05-19", "speciesprofile")) |>
  collect() |>
  as_tibble()
```


```{r}
# download data
inverts <- arrow::open_dataset(here("data", "galah", "inverts")) |> collect()

cleaned_irmng_taxa <- irmng_taxa |>
  filter(taxonomicStatus == "accepted") |> # Filter to accepted names
  filter( # Filter to Animal and plants - change if working with other kingdoms
    kingdom %in% c("Animalia", "Plantae"),
    kingdom != "Questionable / non-biota (fossil)"
  ) |> 
  mutate(
    class = class |>
      str_remove(" \\(awaiting allocation\\)") |>
      str_remove(" incertae sedis")
    )
  
# Join with species profile, remove pesky values and filter to extinct taxa
extinct_irmng <- irmng_taxa |>
  left_join(irmng_sp, by = "taxonID") |>
  filter(scientificName != "Questionable / non-biota (fossil)") |>
  filter(isExtinct == TRUE)

# Summary of extinct species by taxonRank
extinct_irmng$taxonRank |> janitor::tabyl()

# Create genus
inverts_2 <- inverts |>
  mutate(genus = word(scientificName, 1))

# Extract unique extinct genus and remove genus that have punctuation in them
extinct_genus <- extinct_irmng |>
  tidyr::drop_na(genus) |>
  filter(!str_detect(genus, regex("[:punct:]"))) |>
  pull(genus) |>
  unique()

# Check if there are any matches at genus level
inverts_2 |>
  filter(str_detect(genus, pattern = regex(paste0(extinct_genus, collapse = "|")))) |>
  pull(scientificName) |>
  unique()
```

<!-- Originally, the below section used an R package to interact with the IUCN API, but this functionality has since been blocked. I deleted the old code because it won't work anymore -->

The IUCN also provides lists of extinct species
that are in their database. See the [IUCN](LINK) for
more information.


## Summary

...something