[
  {
    "objectID": "intro.html#outline-what-you-will-learn",
    "href": "intro.html#outline-what-you-will-learn",
    "title": "1  Introduction",
    "section": "1.1 Outline: What you will learn",
    "text": "1.1 Outline: What you will learn\nCleaning open-access biodiversity data involves a few steps:\n\n\n\n\n\nflowchart TB\n  A(Narrow data scope) --&gt; B(Import data) --&gt; C(Investigate metadata)\n  C --&gt; D{Cleaning}\n  D --&gt; E(Taxonomic issues)\n  D --&gt; F(Spatial issues)\n\n\nFigure 1.1: The cleaning process\n\n\n\n\nOnce data have been narrowed, imported and formatted correctly we can then start the major cleaning steps. We will focus on how to deal with the most common issues with biodiversity data:\nTaxonomic standardisation problems, such as:\n\nvaried species name synonyms\nnaming authorities and duplicates\n\nas well as spatial errors and issues, like:\n\nsuspicious outliers\nduplicates.\n\n\n\n\n\n\n\nImportant!\n\n\n\nNo one size fits all in this workflow.\nIn the literature, we found that data cleaning steps are frequently completed in entirely different orders. Not all steps are relevant or possible depending on the nature of the study, or, the area of expertise possessed. Therefore this book does not necessarily have to be used in a linear fashion. While some steps may logically come first, you may need to go back to them after completing another."
  },
  {
    "objectID": "intro.html#what-you-wont-learn",
    "href": "intro.html#what-you-wont-learn",
    "title": "1  Introduction",
    "section": "1.2 What you won’t learn",
    "text": "1.2 What you won’t learn\nThere are many important subject areas that this book will not cover. We won’t be teaching you:\n\nHow to clean environmental data that isn’t occurrence / biodiversity data: e.g. trait data\nHow to run a species distribution model\nHypothesis testing or experimental design"
  },
  {
    "objectID": "intro.html#prerequisites",
    "href": "intro.html#prerequisites",
    "title": "1  Introduction",
    "section": "1.3 Prerequisites",
    "text": "1.3 Prerequisites\nThis data cleaning book assumes some basic knowledge using R and RStudio, but if you have never used R before there are a plethora of online and freely accessible resources to help you get started.\n\n1.3.1 User accounts\nTo get data out of data infrastructures such as the Atlas of living Australia (ALA) or the Global Biodiversity Information (GBIF) you’ll need to first create an account.\nYou’ll want to sign up for an account with the relevant data infrastructure. This book will use ALA and GBIF data as examples.\nYou can do this for the Atlas of Living Australia here -\nand for the Global Biodiversity Information Facility here.\n\n\n1.3.2 R\nDownload R from CRAN for your operating system and install it on your device. Major updates for R come out yearly, with a few minor releases throughout the year - so make sure to update semi regularly.\n\n\n1.3.3 RStudio\nRStudio is an integrated development environment (IDE) for R programming. R operatees within R studio, so to code, you will need both R and RStudio. Download and install RStudio for your operating system here.\n\n\n\n\nRodrigues, A. V., Nakamura, G., Staggemeier, V. G., & Duarte, L. (2022). Species misidentification affects biodiversity metrics: Dealing with this issue using the new R package naturaList. Ecological Informatics, 69, 101625. https://doi.org/10.1016/j.ecoinf.2022.101625"
  },
  {
    "objectID": "scope.html#an-example-question",
    "href": "scope.html#an-example-question",
    "title": "2  Data scope",
    "section": "2.1 An example question",
    "text": "2.1 An example question\nAs an example, let’s imagine we were interested in understanding more about the distribution of several Jewel beetles in the genus Lampromicra. Let’s see some ways we might investigate what data are available about them in Australia.\n\n\n\n \n\n\n\n\n\n \n\n\n\n\nCurious what a Jewel beetle looks like? Here is a Lampromicra senator perched on a leaf by Matthew Connors CC-BY-NC 4.0 (Int)"
  },
  {
    "objectID": "scope.html#naming-authorities",
    "href": "scope.html#naming-authorities",
    "title": "2  Data scope",
    "section": "2.2 Naming authorities",
    "text": "2.2 Naming authorities\n\n\n\n\n\n2.2.1 Choosing your taxonomic naming authority\nNaming authorities are the different organisations that provide updated or revised lists of species, and where they fit on the taxonomic tree . Species names in these lists vary as there may be disagreements as to what distinguishes a new genus, species, subspecies etc. \nOpen source repositories are often provided with conflicting taxonomies that leave them open to a degree of error .\nChoosing a naming authority is, then, one one way to make decisions surrounding taxonomic categorisations of open source biodiversity data. However, deciding what naming authority to use can be both challenging and time consuming.\nAccurate species delimitation is also crucial for adequate conservation management and understanding evolutionary processes (Mace 2004). Species level lists are the foundation of many conservation decisions: such as the IUCN conservation status classification system. Taxonomic scope therefore has an effect on research application impacts.\nWhat you choose will depend on your own taxonomic research and evaluation, but also your scope.\n\n\n\n\n\n\nNote\n\n\n\nA spatial scope will have many species and may need multiple naming authorities. Similarly, choosing a naming authority may impact your scope by shrinking or enlarging datasets in that it will exclude records outside of that authority (unless converted). This data change might influence your choice to use a naming authority from a single taxonomic society group or multiple broad sources.\n\n\n\n\nCheck changes in the taxonomy of your focus species.\nThis can be helpful when interpreting old data which may have species names you don’t recognize, or, when using data citing a different naming authority to another data set you wish to consolidate it with. This can be achieved by consulting the taxonomic literature.\nMost taxonomic society groups also release annual updates on taxonomy.\n\nIn Australia, the Australian Plant Name Index (APNI) is the primary naming authority for plants. With the Australian Faunal Directory (AFD) the main taxonomic catalog for animal species.\nThese authorities provide a list of accepted and authoritative names as a template. If you’re unsure what naming authority to use and you’re looking at Australian species, the APNI and the AFD are a good place to start, especially if the data you’re investigating covers a wide range of taxa. If you’re investigating specific taxa it’s worth checking when the taxonomy was last updated in the APNI or AFD, especially if you know there has been recent changes. If you want to investigate closer, we’ve provided some links to society groups, in some cases these can be more up to date that the APNI or AFD.\ninsert a mapped example of data changes when changing taxonomic naming authority?\n\n\nFor example, the ALA uses multiple naming authorities in a hierarchical format:\n(note image is from a helpfile I wrote- we can re-do it so it’s consistent with the style of this document)\n**remake this? simplify? or remove entirely**\n\n\n\n**make this shorter and include somewhere**\n\nWith all that, open source data has many pros, so how does one deal with taxonomic inconsistencies to get the most accurate data in the end?\nWhile this is in theory how the ALAs backbone is built, issues can occur with aggregation leading to potentially serious problems with the taxonomic structure. In addition data can be parsed incorrectly, and the process isn’t transparent. Meaning that when the taxonomic backbone is updated, the elements that have changed are untraceable. These issues are not specific to ALA taxonomy, but occur in varying forms among data aggregators."
  },
  {
    "objectID": "scope.html#summary",
    "href": "scope.html#summary",
    "title": "2  Data scope",
    "section": "2.5 Summary",
    "text": "2.5 Summary\nThis chapter has demonstrated some ways to initially investigate the data available to answer a research question using the {galah} package. This is just a small example of how you might go about interogating the data to think critically about your data scope.\nThe next chapter will explain how you can download and save your data set to begin the first step of your analysis."
  },
  {
    "objectID": "scope.html#temporal-scope",
    "href": "scope.html#temporal-scope",
    "title": "2  Data scope",
    "section": "2.2 Temporal scope",
    "text": "2.2 Temporal scope\nA good first step to understanding what data are available is to check how many observations there are over different time periods. We can check how many total observations there are in the Atlas of Living Australia (the largest biodiversity data aggregator in Australia) with the following query:\n\nlibrary(galah)\n\natlas_counts()\n\n# A tibble: 1 × 1\n      count\n      &lt;int&gt;\n1 125686851\n\n\nNow let’s check how many total insect records there are.\n\ngalah_call() |&gt;\n  galah_identify(\"insecta\") |&gt;\n  atlas_counts()\n\n# A tibble: 1 × 1\n    count\n    &lt;int&gt;\n1 5458391\n\n\nNow let’s see how many insects have been observed each year over the last 10 years. We’ll order this by descending year using dplyr::arrange() and dplyr::desc().\n\nlibrary(dplyr)\n\ngalah_call() |&gt;\n  galah_identify(\"insecta\") |&gt;\n  galah_filter(year &gt;= 2013) |&gt;\n  galah_group_by(year) |&gt;\n  atlas_counts() |&gt;\n  dplyr::arrange(dplyr::desc(year))\n\n# A tibble: 11 × 2\n   year   count\n   &lt;chr&gt;  &lt;int&gt;\n 1 2023  281187\n 2 2022  446391\n 3 2021  354985\n 4 2020  263757\n 5 2019  185097\n 6 2018  228057\n 7 2017  194184\n 8 2016  169418\n 9 2015  124221\n10 2014  126431\n11 2013  115521\n\n\nNow that we have an idea of the total amount of data in the Atlas of Living Australia, let’s try checking how many observations exist of the genus Lampromicra. We’ll first make sure the scientific name Lampromicra returns the taxon information we expect with search_taxa().\n\nsearch_taxa(\"Lampromicra\")\n\n# A tibble: 1 × 13\n  search_term scientific_name scientific_name_authorship taxon_concept_id  rank \n  &lt;chr&gt;       &lt;chr&gt;           &lt;chr&gt;                      &lt;chr&gt;             &lt;chr&gt;\n1 Lampromicra Lampromicra     Stål, 1873                 https://biodiver… genus\n# ℹ 8 more variables: match_type &lt;chr&gt;, kingdom &lt;chr&gt;, phylum &lt;chr&gt;,\n#   class &lt;chr&gt;, order &lt;chr&gt;, family &lt;chr&gt;, genus &lt;chr&gt;, issues &lt;chr&gt;\n\n\nThis looks correct! Next let’s see how many total observations there are of Lampromicra and how many observations there were in each of the last 10 years.\n\ngalah_call() |&gt;\n  galah_identify(\"Lampromicra\") |&gt;\n  atlas_counts()\n\n# A tibble: 1 × 1\n  count\n  &lt;int&gt;\n1  1240\n\ngalah_call() |&gt;\n  galah_identify(\"Lampromicra\") |&gt;\n  galah_filter(year &gt;= 2013) |&gt;\n  galah_group_by(year) |&gt;\n  atlas_counts() |&gt;\n  dplyr::arrange(dplyr::desc(year))\n\n# A tibble: 11 × 2\n   year  count\n   &lt;chr&gt; &lt;int&gt;\n 1 2023    107\n 2 2022    229\n 3 2021    218\n 4 2020    150\n 5 2019     75\n 6 2018     53\n 7 2017     44\n 8 2016     42\n 9 2015     13\n10 2014     14\n11 2013      6\n\n\nThere are a growing number of observations from 2012 to 2023 of Jewel beetles in the Atlas of Living Australia, with fewer than 100 observations each year prior to 2020.\nWith this information, we might choose to combine data from all years in our analysis (rather than separating them by year). Alternatively, we might decide to only include data since 2020, which might be sufficient to represent where Lampromicra are found and be more relevant because they are more recent observations. These are decisions that might affect the granularity of the research question we ask."
  },
  {
    "objectID": "scope.html#taxonomic-scope",
    "href": "scope.html#taxonomic-scope",
    "title": "2  Data scope",
    "section": "2.3 Taxonomic scope",
    "text": "2.3 Taxonomic scope\nTaxonomy refers to way by which we classify an organism and its relationship to all other organisms. Typically, your research question be concerned with one or more taxonomic groups, ranging from a single species to an entire kingdom (e.g. Plantae).\nIn our example, we are interested in understanding more about Jewel beetles in the genus Lampromicra.\nWe first might want to know what species there are in the genus Lampromicra and view some additional taxonomic information about them. We can do this by adding atlas_species() to the end of a query in {galah}.\n\n\n\n\n\n\nNote\n\n\n\nYou will need to add an email address registered with the Atlas of Living Australia in galah_config() to download species information.\n\n\n\ngalah_config(email = Sys.getenv(\"ALA_EMAIL\"))\n\ngalah_call() |&gt;\n  galah_identify(\"Lampromicra\") |&gt;\n  atlas_species() |&gt;\n  select(family:species_guid)\n\n# A tibble: 3 × 5\n  family        genus       species             author            species_guid  \n  &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;               &lt;chr&gt;             &lt;chr&gt;         \n1 Scutelleridae Lampromicra Lampromicra senator (Fabricius, 1803) https://biodi…\n2 Scutelleridae Lampromicra Lampromicra aerea   (Distant, 1892)   https://biodi…\n3 Scutelleridae Lampromicra Lampromicra regia   Bergroth, 1895    https://biodi…\n\n\nOur query returned three species in the genus Lampromicra. We can enter the urls returned under species_guid in a web browser if we wished to know more information about any of them.\nWe might also wish to check the total number of observations of each of these species. We can check this by grouping our counts by species using galah_group_by(species)\n\ngalah_call() |&gt;\n  galah_identify(\"Lampromicra\") |&gt;\n  galah_group_by(species) |&gt;\n  atlas_counts()\n\n# A tibble: 3 × 2\n  species             count\n  &lt;chr&gt;               &lt;int&gt;\n1 Lampromicra senator  1008\n2 Lampromicra aerea     162\n3 Lampromicra regia      13\n\n\nOur result shows that the majority of observations of Lampromicra are of the species Lampromicra senator.\nGiven this information, we might consider whether our question needs to be made at the species level, or whether we might increase the taxonomic scope to the genus or family level to use more data. Ultimately, the taxonomic scope of your data will depend on how important it is to your question to compare specific taxonomic groups."
  },
  {
    "objectID": "scope.html#spatial-scope",
    "href": "scope.html#spatial-scope",
    "title": "2  Data scope",
    "section": "2.4 Spatial scope",
    "text": "2.4 Spatial scope\nIt’s useful to investigate the spatial range of available data for your taxonomic group(s) of interest. How specific your question can be may change depending on whether the majority of data is in only a few locations or evenly spread over the entire distribution of a species or taxonomic group.\nFor our example question about Lampromicra, we may wish to map where observations in Australia have been made. We can do this by using the {ozmaps} package to download a nice map of Australia, plot it with sf::geom_sf(), and add our observation points on top with geom_point(). We can separate the colours of our points by setting colour = scientificName within the aes() of geom_point().\n\n\n\n\n\n\nNote\n\n\n\nYou will need to add an email address registered with the Atlas of Living Australia in galah_config() to download species information.\n\n\n\n# old fonti code. not sure why it's saved?\n# beatles &lt;- open_dataset(\"data/galah/lampromicra\") |&gt; collect() \nlibrary(ozmaps)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(paletteer) # colour palettes\n\n# Download data\ngalah_config(email = Sys.getenv(\"ALA_EMAIL\"))\n\nbeetles &lt;- galah_call() |&gt;\n  galah_identify(\"lampromicra\") |&gt;\n  atlas_occurrences() |&gt;\n  tidyr::drop_na() # remove any NA values\n\n# Get map of australia, set to correct projection for data\naus &lt;- st_transform(ozmaps::ozmap_country, 4326)\n\n# Map\nggplot() +\n  geom_sf(data = aus, \n          colour = \"grey60\", \n          fill = \"white\", \n          alpha = 0.2) +\n  geom_point(data = beetles,\n             mapping = aes(x = decimalLongitude, \n                           y = decimalLatitude, \n                           colour = scientificName),\n             size = 1.8,\n             alpha = 0.6) +\n  scale_color_paletteer_d(\"feathers::eastern_rosella\") +\n  coord_sf(xlim = c(110, 155), \n           ylim = c(-45, -10)) +\n  theme_void()\n\n\n\n\nPlotting our points shows us that observations are spread along the northern and eastern coasts of Australia. We can also see that some observations are only identified to the genus level (e.g. Lampromicra), rather than to a specific species (e.g. Lampromicra aerea).\nThere are several places on the east coast of Australia where there are clumps of overlapping points. It’s difficult to tell how many observations there really are in those areas. To investigate, we can create use ggdfdf from the {ggpointdensity package} to get an idea of the density of overlapping points.\n\nlibrary(ggpointdensity)\n\nggplot() +\n  geom_sf(data = aus, \n          colour = \"grey60\", \n          fill = \"white\", \n          alpha = 0.2) +\n  geom_pointdensity(data = beetles,\n                    mapping = aes(x = decimalLongitude,\n                                  y = decimalLatitude)) +\n  scale_color_paletteer_c(\"viridis::plasma\") +\n  coord_sf(xlim = c(110, 155), \n           ylim = c(-45, -10)) +\n  theme_void()\n\n\n\n\nAdding the density of overlapping points to our map allows us to see that there is one area with many more observations—more than 400 observations are found in the light yellow area!\nUsing this information, we might decide to make our research question more specific to the region where there are the most records of Lampromicra. Alternatively, we might decide that there isn’t enough data to make accurate estimates about Lampromicra. Depending on the spatial specificity of your question, you might have to adjust your data scope or your question accordingly."
  },
  {
    "objectID": "download-data.html#where-to-get-data-from",
    "href": "download-data.html#where-to-get-data-from",
    "title": "3  Download data",
    "section": "3.1 Where to get data from",
    "text": "3.1 Where to get data from\n\n3.1.1 Global\nThe Global Biodiversity Information Facility (GBIF), an international network and data infrastructure, stores global biodiversity data from many sources around the world. GBIF consists of a series of ‘node’ organisations who collate biodiversity data from their own regions and countries, with GBIF acting as an overarching organisation to store data from all nodes. Users that are interested in obtaining data that has global coverage may want to download directly from GBIF.\n\n\n3.1.2 Regional\nAlternatively, using a regional node may be more relevant if your project is at a smaller scale. For example, the Atlas of Living Australia (ALA) is the Australian node, Sistema de Informação sobre a Biodiversidade Brasileira (SiBBr) is the Brazilian node, and GBIF Sweden is the Swedish node. Living Atlases like the ALA ingest and aggregate data from a broad range of providers such as government monitoring programs, museums and herbaria, research projects and citizen science initiatives.\nTo see what national and regional nodes exist, check out this page.\nSome regional nodes like the ALA and SiBBr use their own taxonomic backbone for classification, which might differ from the taxonomic backbone of other regional or global infrastructures like GBIF. These taxonomic classifications can be useful for classifying local flora and fauna, and accepted by experts of the region. It’s worth being aware of what Section 3.2.1.1 are used to error caused by classification later on.\n\n\n3.1.3 Data providers\nIf your project relates to data from a specific data provider, it might be best to download data directly from the source. For example, a common citizen science tool to collect species observations is iNaturalist. Downloading directly from the data provider may ensure you don’t have any stray data from other sources."
  },
  {
    "objectID": "download-data.html#how-to-download-data",
    "href": "download-data.html#how-to-download-data",
    "title": "3  Download data",
    "section": "3.2 How to download data",
    "text": "3.2 How to download data\n\n3.2.1 Using taxonomic information\n\n3.2.1.1 Naming authorities\n\n\n\n\n\n\n\n\n\n3.2.2 Choosing your taxonomic naming authority\nNaming authorities are the people or organisations that create updated or revised lists of species, and where they fit on the taxonomic tree. Species names and taxonomic groups in these lists vary as there may be disagreements between lists about what distinguishes a new genus, species, subspecies etc. Taxonomy is hard!\nSome data (especially from open source repositories) can contain data with conflicting taxonomies from different naming authorities. This difference can cause unexpected errors later in an analysis if you are unaware of which naming authorities were used in your data.\nChoosing a naming authority is, then, one one way to make decisions surrounding taxonomic categorisations of biodiversity data.\nBefore starting your analysis, it’s useful to:\n\nBe aware of which naming authority is accepted for your taxonomic group of interest.\nCheck changes in the taxonomy of your focus species.\nDouble check for updates, as most taxonomic society groups also release annual updates on taxonomy.\n\nIn the Atlas of Living Australia, the Australian Plant Name Index (APNI) is the primary naming authority for plants. With the Australian Faunal Directory (AFD) the main taxonomic catalog for animal species. For a full list, see the appendix.\nData that does not match the preferred naming authority or contains data from multiple naming authorities may need to be matched to a single taxonomic backbone  .\nNow that you’ve chosen a naming authority you can use it to ensure consistency across your data set, but also check you haven’t missed any species data from your download.\n\n3.2.2.1 Searching by classification\nInclude the original name that was recorded by the data provider in your download. This is often referred to as verbatimScientificName. or vernacularname\n\nInclude synonyms of the species names you’re interested in your download\n\n\nlibrary(galah)\n\ngalah_call() |&gt;\n  galah_filter(year &gt; 2019) |&gt;\n  atlas_counts()\n\n# A tibble: 1 × 1\n     count\n     &lt;int&gt;\n1 25402127\n\n\nMany developers have created R packages to interact with each data infrastructures’s API to aid access to biodiversity data. Here are a few examples, we recommend taking a look at each package’s documentation to choose one that suits your project.\n\nrgbif an interface to GBIF\ngalah an interface to a number living Atlases, as well as GBIF\nrinat an interface to iNaturalist observations\nrebird an interface with the eBird webservices.\nspocc a R package to query and collect species occurrence data from various sources including VertNet, iDigBio and others.\n\nOne benefit of using galah is that enables users to acquire not only species occurrence records but also taxonomic information, or associated media such as images or sounds. Below we have included some code blocks for downloading occurrence data with galah from GBIF and a Spain node.\n\n\n3.2.2.2 GBIF data via galah\nFirst, we have to configure galah. This is where you supply your account credentials and set the atlas to a particular region. See ?galah_config for more configuration options. You can save these credentials in your .Renviron so you don’t have to enter it explicitly in code.\nWe will be downloading all occurrences for the African Elephant from GBIF. This may take a while as it is around 12,000 records. Once downloaded, you can save the records locally in your desired format. For larger downloads, we recommend saving the data as parquets using arrow::write_parquet\n\ngalah_config(email = Sys.getenv(\"ALA_EMAIL\"),\n             username = Sys.getenv(\"GBIF_USER\"),\n             password = Sys.getenv(\"GBIF_PWD\"),\n             atlas = \"Global\")\n\nafrican_ele &lt;- galah_call() %&gt;% \n  galah_identify(\"Loxodonta africana\") %&gt;% \n  atlas_occurrences()\n\narrow::write_parquet(african_ele, \"data/gbif/elephant\")\n\n\n\n# A tibble: 12,537 × 50\n      gbifID datasetKey     occurrenceID kingdom phylum class order family genus\n *     &lt;dbl&gt; &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;\n 1 924537719 95f132fe-f762… 73e088f2-f8… Animal… Chord… Mamm… Prob… Eleph… Loxo…\n 2 924537718 95f132fe-f762… 73e0ad3c-f8… Animal… Chord… Mamm… Prob… Eleph… Loxo…\n 3 924537717 95f132fe-f762… 73f0f6ec-f8… Animal… Chord… Mamm… Prob… Eleph… Loxo…\n 4 923926679 50c9509d-22c7… http://www.… Animal… Chord… Mamm… Prob… Eleph… Loxo…\n 5 923924124 50c9509d-22c7… http://www.… Animal… Chord… Mamm… Prob… Eleph… Loxo…\n 6 922237429 6ac3f774-d9fb… &lt;NA&gt;         Animal… Chord… Mamm… Prob… Eleph… Loxo…\n 7 922237412 6ac3f774-d9fb… &lt;NA&gt;         Animal… Chord… Mamm… Prob… Eleph… Loxo…\n 8 922237188 6ac3f774-d9fb… &lt;NA&gt;         Animal… Chord… Mamm… Prob… Eleph… Loxo…\n 9 922237135 6ac3f774-d9fb… &lt;NA&gt;         Animal… Chord… Mamm… Prob… Eleph… Loxo…\n10 922237121 6ac3f774-d9fb… &lt;NA&gt;         Animal… Chord… Mamm… Prob… Eleph… Loxo…\n# ℹ 12,527 more rows\n# ℹ 41 more variables: species &lt;chr&gt;, infraspecificEpithet &lt;chr&gt;,\n#   taxonRank &lt;chr&gt;, scientificName &lt;chr&gt;, verbatimScientificName &lt;chr&gt;,\n#   verbatimScientificNameAuthorship &lt;chr&gt;, countryCode &lt;chr&gt;, locality &lt;chr&gt;,\n#   stateProvince &lt;chr&gt;, occurrenceStatus &lt;chr&gt;, individualCount &lt;dbl&gt;,\n#   publishingOrgKey &lt;chr&gt;, decimalLatitude &lt;dbl&gt;, decimalLongitude &lt;dbl&gt;,\n#   coordinateUncertaintyInMeters &lt;dbl&gt;, coordinatePrecision &lt;dbl&gt;, …\n\n\n\n\n3.2.2.3 Regional node via galah\nIn order to access data from the Australia node, we will need to reconfigure galah so that our query points to Australia. After that, we will download all records for the Pink Robin.\n\ngalah_config(email = Sys.getenv(\"ALA_EMAIL\"), \n             atlas = \"Australia\")\n\npink_robin &lt;- galah_call() %&gt;% \n  galah_identify(\"Petroica rodinogaster\") %&gt;% \n  atlas_occurrences\n\n\n\n# A tibble: 11,992 × 8\n   decimalLatitude decimalLongitude eventDate           scientificName          \n *           &lt;dbl&gt;            &lt;dbl&gt; &lt;dttm&gt;              &lt;chr&gt;                   \n 1           -43.7             146. NA                  Petroica (Erythrodryas)…\n 2           -43.7             146. NA                  Petroica (Erythrodryas)…\n 3           -43.7             146. 1971-02-03 14:00:00 Petroica (Erythrodryas)…\n 4           -43.7             146. 2020-10-07 02:39:00 Petroica (Erythrodryas)…\n 5           -43.7             146. 2015-09-22 14:00:00 Petroica (Erythrodryas)…\n 6           -43.6             146. 2002-01-03 13:00:00 Petroica (Erythrodryas)…\n 7           -43.6             146. NA                  Petroica (Erythrodryas)…\n 8           -43.6             146. 2020-12-27 13:00:00 Petroica (Erythrodryas)…\n 9           -43.6             146. 2021-03-07 13:00:00 Petroica (Erythrodryas)…\n10           -43.6             146. 2020-12-26 13:00:00 Petroica (Erythrodryas)…\n# ℹ 11,982 more rows\n# ℹ 4 more variables: taxonConceptID &lt;chr&gt;, recordID &lt;chr&gt;,\n#   dataResourceName &lt;chr&gt;, occurrenceStatus &lt;chr&gt;\n\n\n\n\n\n3.2.3 Using spatial information\n\n\n\n\n\n3.2.3.1 Searching by region\nOne way to download data is by filtering to an area of interest using fields already in the ALA and {galah}.\n\n\n3.2.3.2 Searching by bounding box\nAnother way to download data is by filtering to return observations within a bounding box.\nThis can be useful when you want to be sure to include records on the border or just outside the border of a defined region (which might affect predictions of where species live in a model).\nIt can also be useful if you want to filter data yourself.\n\n\n3.2.3.3 Searching with a shapefile\nYou can use a shapefile to filter observations. Shapefiles are [a file with points to make an outline, they can be simple or complex].\nIn R, using shapefiles requires using a package for handling spatial data like the {sf} package. [This is because the sf package helps transform & edit our shapefile to be plotted using longitude and latitude using a specified coordinate reference system - define.]\nHere is a simple polygon we have constructed for a theoretical “site A”. We use st_as_sf() and st_set_crs() from the convert our shapefile to a spatial object in R, then set its coordinate reference system. This allows us to plot this object with {ggplot2}.\nUsing shapefiles allows us to return data for very specific shapes, and are useful for long-term analyses of observations in specific regions or areas."
  },
  {
    "objectID": "download-data.html#choosing-specific-data-columns",
    "href": "download-data.html#choosing-specific-data-columns",
    "title": "3  Download data",
    "section": "3.3 Choosing specific data columns",
    "text": "3.3 Choosing specific data columns\n\nBy default, atlas_occurrences will return a tibble with a selection of columns containing taxonomic and spatial data as well as other metadata. Alternatively, you can use galah_select to subset the columns that are relevant for your work. To see all available fields you can choose from:\n\nshow_all(fields) \n\n# A tibble: 626 × 4\n   id                  description                                   type  link \n   &lt;chr&gt;               &lt;chr&gt;                                         &lt;chr&gt; &lt;chr&gt;\n 1 _nest_parent_       &lt;NA&gt;                                          fiel… &lt;NA&gt; \n 2 _nest_path_         &lt;NA&gt;                                          fiel… &lt;NA&gt; \n 3 _root_              &lt;NA&gt;                                          fiel… &lt;NA&gt; \n 4 abcdTypeStatus      ABCD field in use by herbaria                 fiel… &lt;NA&gt; \n 5 acceptedNameUsage   http://rs.tdwg.org/dwc/terms/acceptedNameUsa… fiel… &lt;NA&gt; \n 6 acceptedNameUsageID http://rs.tdwg.org/dwc/terms/acceptedNameUsa… fiel… &lt;NA&gt; \n 7 accessRights        &lt;NA&gt;                                          fiel… &lt;NA&gt; \n 8 annotationsDoi      &lt;NA&gt;                                          fiel… &lt;NA&gt; \n 9 annotationsUid      &lt;NA&gt;                                          fiel… &lt;NA&gt; \n10 assertionUserId     User ID of the person who has made an assert… fiel… &lt;NA&gt; \n# ℹ 616 more rows\n\n\nHere, we will choose a smaller subsets of 8 columns to download for the Pink Robin\n\nproject_fields &lt;- c(\"recordID\",\n                    \"eventDate\",\n                    \"year\", \n                    \"basisOfRecord\", \n                    \"occurrenceStatus\",\n                    \"scientificName\",\n                    \"decimalLatitude\",\n                    \"decimalLongitude\")\n\npink_robin_projfields &lt;- galah_call() %&gt;% \n  galah_identify(\"Petroica rodinogaster\") %&gt;% \n  galah_select(project_fields) %&gt;% \n  atlas_occurrences()\n\n\n\n# A tibble: 11,992 × 8\n   recordID             eventDate            year basisOfRecord occurrenceStatus\n * &lt;chr&gt;                &lt;dttm&gt;              &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;           \n 1 000fc2ef-b696-4576-… 1976-12-18 13:00:00  1976 HUMAN_OBSERV… PRESENT         \n 2 001410fd-3a01-43aa-… 1978-05-23 14:00:00  1978 HUMAN_OBSERV… PRESENT         \n 3 00164a76-0b3a-4b44-… 1977-12-15 13:00:00  1977 HUMAN_OBSERV… PRESENT         \n 4 001bfca5-4197-40a6-… 1940-12-31 14:00:00  1941 OBSERVATION   PRESENT         \n 5 001e33bd-bb15-4384-… 2002-10-17 14:00:00  2002 HUMAN_OBSERV… PRESENT         \n 6 0021cc7c-a371-4af6-… 2016-04-09 14:00:00  2016 OCCURRENCE    PRESENT         \n 7 00287e24-87b8-429a-… 2021-01-14 13:00:00  2021 HUMAN_OBSERV… PRESENT         \n 8 002e05a7-b1bf-4eba-… 2000-07-24 14:00:00  2000 OBSERVATION   PRESENT         \n 9 00327fc2-ae67-467b-… 1983-11-23 13:00:00  1983 PRESERVED_SP… PRESENT         \n10 0035016f-ae80-494a-… NA                     NA HUMAN_OBSERV… PRESENT         \n# ℹ 11,982 more rows\n# ℹ 3 more variables: scientificName &lt;chr&gt;, decimalLatitude &lt;dbl&gt;,\n#   decimalLongitude &lt;dbl&gt;"
  },
  {
    "objectID": "download-data.html#refining-your-data-download",
    "href": "download-data.html#refining-your-data-download",
    "title": "3  Download data",
    "section": "3.4 Refining your data download",
    "text": "3.4 Refining your data download\n\nOpen access biodiversity data comes from many different data sources, (eg. government monitoring programs, museums, herbaria, research projects, citizen science apps). As such, data type and quality can vary considerably. For example, museums harbour older records that are associated with a preserved specimens. These data often contain lots of extra information (metadata) about a specific specimen and its location. Alternatively, data sourced from citizen science apps like iNaturalist or eBird are associated with images or sounds captured from a smart phone. These data might contain less metadata of each observation, but, thanks to phones’ accurate location services, are quite accurate about the time and location of an observation.\nRefining your download query ensures higher quality data and also reduces the download size as many data infrastructures impose constraints to download size. Below we have illustrated how you can refine your query a few quality measures using galah_filter.\n\n3.4.0.1 By Year\nGenerally, old data records tend to be insufficient or less reliable as taxonomic knowledge and GPS tools were not readily available. For this reason, many users consider removing all occurrence records before a certain year to increase data precision (Gueta and Carmel 2016; Marsh et al. 2022) .\nChoosing the year ‘cut-off’ is relatively arbitary, but the most commonly used year is 1945 (Zizka et al. 2020; Führding-Potschkat, Kreft, and Ickert-Bond 2022), although some studies discard all data collected before 1990 (Gueta and Carmel 2016; Marsh et al. 2022).\nHere we will narrow the Pink Robin query from above to records after 1945 using galah_filter:\n\npink_robin_post1945 &lt;- galah_call() %&gt;% \n  galah_identify(\"Petroica rodinogaster\") %&gt;% \n  galah_filter(year &gt; 1945) %&gt;% \n  atlas_occurrences()\n\n\n\n3.4.0.2 Basis of record\nBasis of record is a Darwin Core term that refers to the specific nature of the occurrence record. It can be used to refine your data download and ensure consistency when consolidating data from multiple organisations (Führding-Potschkat, Kreft, and Ickert-Bond 2022).\nThere are 6 different classes for basis of record:\n\nLiving Specimen - a specimen that is alive, e.g. a living plant in a national park\nPreserved Specimen - a specimen that has been preserved, for example, a dried plant on an herbarium sheet\nFossil Specimen - a preserved specimen that is a fossil\nMaterial Sample - a genetic or environmental sample\nMaterial Citation - A reference to, or citation of, a specimen in scholarly publications, e.g a citation of a physical specimen in a scientific journal\nHuman Observation - an output of human observation process e.g. evidence of an occurrence taken from field notes or an occurrence without any physical evidence\nMachine Observation - An output of a machine observation process e.g. a photograph, a video, an audio recording, a remote sensing image or an occurrence record based on telemetry.\n\nDepending on your data scope, it may be practical to limit data that can be traced to a physical specimen or observation (Godfree et al. 2021), which we do for the Pink Robin below\n\ntractable_records &lt;- c(\"LIVING_SPECIMEN\", \n                       \"PRESERVED_SPECIMEN\", \n                       \"MATERIAL_SAMPLE\", \n                       \"MACHINE_OBSERVATION\")\n\npink_robin_tractable &lt;- galah_call() %&gt;% \n  galah_identify(\"Petroica rodinogaster\") %&gt;% \n  galah_filter(basisOfRecord == tractable_records) %&gt;% \n  atlas_occurrences()\n\n\n\n3.4.0.3 Assertions\nData infrastructures use assertions to internally grade the quality, completeness and consistency of each occurrence record. Assertions take values of either 1 or 0, indicating the presence or absence of the data quality issue. Note that assertions may vary depending what atlas you have configured to. You can see the available assertions and their descriptions using:\n\nshow_all(\"assertions\") \n\n# A tibble: 114 × 4\n   id                                 description                 category type \n   &lt;chr&gt;                              &lt;chr&gt;                       &lt;chr&gt;    &lt;chr&gt;\n 1 AMBIGUOUS_COLLECTION               Ambiguous collection        Warning  asse…\n 2 AMBIGUOUS_INSTITUTION              Ambiguous institution       Warning  asse…\n 3 BASIS_OF_RECORD_INVALID            Basis of record badly form… Warning  asse…\n 4 biosecurityIssue                   Biosecurity issue           Error    asse…\n 5 COLLECTION_MATCH_FUZZY             Collection match fuzzy      Warning  asse…\n 6 COLLECTION_MATCH_NONE              Collection not matched      Warning  asse…\n 7 CONTINENT_COUNTRY_MISMATCH         Continent country mismatch  Warning  asse…\n 8 CONTINENT_DERIVED_FROM_COORDINATES Continent derived from coo… Warning  asse…\n 9 CONTINENT_INVALID                  Continent invalid           Warning  asse…\n10 COORDINATE_INVALID                 Coordinate invalid          Warning  asse…\n# ℹ 104 more rows\n\n\nOnce you have decided which assertions are important for your project you can further refine your download. To retrieve all the assertions for your query use galah_select(group = \"assertions\")"
  },
  {
    "objectID": "download-data.html",
    "href": "download-data.html",
    "title": "3  Download data",
    "section": "",
    "text": "4 Appendix: Naming Authorities\nAccurate species delimitation is also crucial for adequate conservation management and understanding evolutionary processes (Mace 2004). Species level lists are the foundation of many conservation decisions: such as the IUCN conservation status classification system. Taxonomic scope therefore has an effect on research application impacts.\nDeciding what naming authority to use can be challenging. What you choose will depend on your own taxonomic research and evaluation, but also your research scope.\nThe Atlas of Living Australia uses the following priority list of naming authorities:\nThese authorities provide a list of accepted and authoritative names as a template. If you’re unsure what naming authority to use and you’re looking at Australian species, the APNI and the AFD are a good place to start, especially if the data you’re investigating covers a wide range of taxa. If you’re investigating specific taxa it’s worth checking when the taxonomy was last updated in the APNI or AFD, especially if you know there has been recent changes. If you want to investigate closer, we’ve provided some links to society groups, in some cases these can be more up to date that the APNI or AFD.\ninsert a mapped example of data changes when changing taxonomic naming authority?"
  }
]