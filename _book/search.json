[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ALA Data Cleaning",
    "section": "",
    "text": "Welcome\nData cleaning is the exploration, detection and correction of erroneous or unsuitably formatted data. The standard of what ‘clean’ data looks like varies considerably across projects and data sources. This means that there is no ‘one-size-fits-all’ approach.\nOur goal in creating this resource is to assist researchers and decision makers that may have limited experience with cleaning geo-referenced biodiversity data in R.\nIn this book, we provide an overview of a typical data cleaning workflow - from acquisition, to identifying potential errors, and, to correction. In each chapter we include practical guidelines, R code blocks and additional resources that may aid with each data cleaning step.\nThe content of this book is guided by the current state of biodiversity literature on preparing data for species distribution modelling. For more details about how this was done, please refer to the Appendix. All resources that have been consulted for this book can be found in References."
  },
  {
    "objectID": "index.html#how-to-contribute",
    "href": "index.html#how-to-contribute",
    "title": "ALA Data Cleaning",
    "section": "How to contribute",
    "text": "How to contribute\nWe would like to preface that we are not experts in data cleaning, but felt there was need for a consolidated resource to guide data cleaning decisions.\nWe welcome contributions to this document and suggest anyone to submit pull requests at the GitHub repository of this document. Contributing guidelines can be found at XX (Maybe another section or just a MD in GitHub Repo)\nAlternatively, if you have questions please submit a GitHub issue."
  },
  {
    "objectID": "index.html#how-to-cite",
    "href": "index.html#how-to-cite",
    "title": "ALA Data Cleaning",
    "section": "How to cite",
    "text": "How to cite\nTO COME BACK TO THIS LATER Refer to this when creating this section(https://ardc.edu.au/resource/citing-software/)\nYou can cite this document:"
  },
  {
    "objectID": "index.html#acknowlodgements",
    "href": "index.html#acknowlodgements",
    "title": "ALA Data Cleaning",
    "section": "Acknowlodgements",
    "text": "Acknowlodgements\nThis book was inspired by an Australian Research Data Commons project where our team worked closely with research partners to streamline their data cleaning workflows. This book is a collaborative effort from the Science and Decision Support team at the Atlas of Living Australia (ALA)\nAuthors listed in alphabetic order:\n- Fonti Kar\n- Jessica Fenker\n- Margot Schneider\n- Martin Westgate"
  },
  {
    "objectID": "intro.html#what-you-will-learn-outline-of-the-book",
    "href": "intro.html#what-you-will-learn-outline-of-the-book",
    "title": "1  Introduction",
    "section": "1.1 What you will learn / Outline of the book",
    "text": "1.1 What you will learn / Outline of the book\n\n\n# new diagram here\nlibrary(DiagrammeR)\n\nTo begin working with open access data we’ll teach you how to:\n\nNarrow your data scope\nImport data\nTidy and familiarise yourself with metadata\n\nOnce data have been imported and formatted correctly we’ll dive into the major cleaning steps. We will focus on how to deal with taxonomic and spatial issues with biodiversity or species occurrence data.\n\nWe will start with taxonomic issues\n\nTaxonomic issues\n\nnaming authorities\nsynonyms\nDuplicates\n\nSpatial data\n\nOutliers\nDuplicates"
  },
  {
    "objectID": "intro.html#what-you-wont-learn",
    "href": "intro.html#what-you-wont-learn",
    "title": "1  Introduction",
    "section": "1.2 What you won’t learn",
    "text": "1.2 What you won’t learn\nThere are many important subject areas that this book will not cover. We won’t be teaching you:\n\nHow to clean other data types e.g. environmental or trait data\nHow to run a species distribution model\nHypothesis testing or experimental design"
  },
  {
    "objectID": "intro.html#prerequisites",
    "href": "intro.html#prerequisites",
    "title": "1  Introduction",
    "section": "1.3 Prerequisites",
    "text": "1.3 Prerequisites\n\n1.3.1 User accounts\nTo get data out of data infrastructures such as the Atlas of living Australia (ALA) or the Global Biodiversity Information (GBIF) you’ll need to first create an account. You’ll want to sign up for an account with the relevant data infrastructure. This book will use ALA and GBIF data as examples.\nAtlas of Living Australia = create an account Global Biodiversity Information Facility = create an account\n\n\n1.3.2 R\nDownload R from CRAN (the comprehensive R archive network), for your operating system, and install it on your device. Major updates for R come out yearly with a few minor releases throughout the year, so make sure to update semi regularly.\n\nWindows\n\n\nMac\n\n\n\n1.3.3 RStudio\nRstudio is an integrated development environment (IDE) for R programming. Download and install Rstudio for your operating system https://posit.co/download/rstudio-desktop/\n\nWindows\n\n\nMac"
  },
  {
    "objectID": "intro.html#how-to-use-this-book",
    "href": "intro.html#how-to-use-this-book",
    "title": "1  Introduction",
    "section": "1.4 How to use this book",
    "text": "1.4 How to use this book\nThere is no one size fits all workflow and not all steps are relevant and/or possible. Through examining the literature we found steps were frequently done in completely different orders depending on the nature of the study and the area of expertise possessed. Because of this, we don’t recommend you use this book in a linear fashion. However some steps logically come first, you might need to go back to them after completely another (fig x) \n\n\n\n\nRodrigues, A. V., Nakamura, G., Staggemeier, V. G., & Duarte, L. (2022). Species misidentification affects biodiversity metrics: Dealing with this issue using the new R package naturaList. Ecological Informatics, 69, 101625. https://doi.org/10.1016/j.ecoinf.2022.101625"
  },
  {
    "objectID": "taxonomy.html#taxonomy-preclean",
    "href": "taxonomy.html#taxonomy-preclean",
    "title": "5  Taxonomy",
    "section": "5.1 Taxonomy preclean",
    "text": "5.1 Taxonomy preclean\nSimilar to what we did in the previous chapter, we will apply a broad sweep pre-clean to taxonomic data. This will make dealing with synonyms go as smoothly as possible.\nThe process is to first identify the issue, correct it, check it, and then document the changes. The goal is to standardise and correct as many errors issues before removing records.\n\n5.1.1 Capitalisation\nNormally higher taxonomy are capitalised e.g. Myrtaceae or Aves. Capitalisation errors are usually quick to spot when you print the data object. Alternatively you can try using str_subset on columns you expect to have capital letters.\nThe code below subsets out unique values for the variable class that have upper case letters. Notice that no matches are found\n\nlibrary(tidyverse)\n\nstr_subset(unique(bees$class), \"[:upper:]\")\n\ncharacter(0)\n\n\nWe can confirm that there are no upper case matches by subsetting unique values that have lower case letters to see what is going on. This shows us that Insecta is inputted entirely in lowercase.\n\nstr_subset(unique(bees$class), \"[:lower:]\") \n\n[1] \"insecta\"\n\n\nWe can correct the lower case formatting as below, remember to check the fix before overwriting/removing the erroneous column(s)\n\nbees |> \n  mutate(class_corrected = str_to_sentence(class)) |>\n  select(starts_with(\"class\"))\n\n# A tibble: 1,139 × 2\n   class   class_corrected\n   <chr>   <chr>          \n 1 insecta Insecta        \n 2 insecta Insecta        \n 3 insecta Insecta        \n 4 insecta Insecta        \n 5 insecta Insecta        \n 6 insecta Insecta        \n 7 insecta Insecta        \n 8 insecta Insecta        \n 9 insecta Insecta        \n10 insecta Insecta        \n# … with 1,129 more rows\n\nbees_corrected <- bees |> \n  mutate(class_corrected = str_to_sentence(class)) |> \n  select(-class) |> # Remove erroreous column \n  rename(class = class_corrected) # Rename corrected column as the new 'class'\n\n\n\n5.1.2 Seperators\nIn a taxonomic data, separators such as, spaces and underscore are found in scientific names and are used to delineate the genus and species name. While it is personal choice which separator you use, it is good practice to be consistent with your choice. Consistency ensures that unique values of scientific name truly reflects unique species and not due to inconsistencies.\nTry tabyl-ing your taxonomic columns to check if you have any inconsistencies first\n\nlibrary(janitor)\n\nplants |> \n  pull(scientific_name) |> \n  tabyl() |> \n  tibble()\n\n# A tibble: 623 × 3\n   `pull(plants, scientific_name)`         n  percent\n   <chr>                               <int>    <dbl>\n 1 Acacia asparagoides                     2 0.000962\n 2 Acacia barakulensis                     1 0.000481\n 3 Acacia barringtonensis                  2 0.000962\n 4 Acacia beadleana                        1 0.000481\n 5 Acacia betchei                          6 0.00289 \n 6 Acacia blayana                          2 0.000962\n 7 Acacia brunioides                       1 0.000481\n 8 Acacia brunioides subsp. brunioides     6 0.00289 \n 9 Acacia brunioides subsp. granitica      1 0.000481\n10 Acacia bulgaensis                       3 0.00144 \n# … with 613 more rows\n\n\nConsistent taxonomic formatting may not be an issue if you are downloading data from one single source such as the ALA where scientific names are already formatted consistently e.g. “Moloch horridus”. This may not be the case when consolidating data from multiple sources.\nBelow is code to create an underscore scientific name from one that is separated with a space. Remember to check your changes\n\nplants_updated <- plants |> \n  mutate(scientific_name_undersc = str_replace_all(scientific_name, \" \", \"_\")) \n\nplants_updated |> \n  pull(scientific_name_undersc) |> \n  tabyl() |> \n  tibble()\n\n# A tibble: 623 × 3\n   `pull(plants_updated, scientific_name_undersc)`     n  percent\n   <chr>                                           <int>    <dbl>\n 1 Acacia_asparagoides                                 2 0.000962\n 2 Acacia_barakulensis                                 1 0.000481\n 3 Acacia_barringtonensis                              2 0.000962\n 4 Acacia_beadleana                                    1 0.000481\n 5 Acacia_betchei                                      6 0.00289 \n 6 Acacia_blayana                                      2 0.000962\n 7 Acacia_brunioides                                   1 0.000481\n 8 Acacia_brunioides_subsp._brunioides                 6 0.00289 \n 9 Acacia_brunioides_subsp._granitica                  1 0.000481\n10 Acacia_bulgaensis                                   3 0.00144 \n# … with 613 more rows\n\n\n\n\n5.1.3 Higher taxonomy\nHigher taxonomy such as phylum and class may be used to group species for analysis or data visualisations. Its important to check the spelling and formatting of these columns. Its always good to start with some a useful table of counts for each taxonomic level. Keep an eye out for spelling errors, formatting issues and missing data. Note that NA in the output represents missing\nAs an example:\n\nlibrary(tidyverse)\nlibrary(janitor)\n\nplants |> \n  pull(class) |> \n  tabyl()\n\n pull(plants, class)    n     percent valid_percent\n         Cycadopsida    4 0.001924002   0.001937046\n       Equisetopsida  202 0.097162097   0.097820823\n      Lycopodiopsida   10 0.004810005   0.004842615\n       Magnoliopsida 1822 0.876382876   0.882324455\n           Pinopsida    2 0.000962001   0.000968523\n      Polypodiopsida   25 0.012025012   0.012106538\n                <NA>   14 0.006734007            NA\n\nplants |> \n  pull(order) |> \n  tabyl() |> \n  head()\n\n pull(plants, order)   n     percent valid_percent\n         Alismatales   6 0.002886003   0.002939735\n             Apiales  36 0.017316017   0.017638413\n         Asparagales  67 0.032227032   0.032827046\n           Asterales 158 0.075998076   0.077413033\n    Austrobaileyales   6 0.002886003   0.002939735\n          Canellales   5 0.002405002   0.002449780\n\nplants |> \n  pull(genus) |> \n  tabyl() |> \n  tail()\n\n pull(plants, genus)  n     percent valid_percent\n               Viola  5 0.002405002   0.002501251\n          Westringia 12 0.005772006   0.006003002\n           Xanthosia  9 0.004329004   0.004502251\n               Xyris  4 0.001924002   0.002001001\n              Zieria 14 0.006734007   0.007003502\n                <NA> 80 0.038480038            NA\n\n\n\nMissing higher taxonomy\nIf you noticed you have missing data in these columns, you can usually back fill this information using your chosen naming authority or retrieving this information from a living atlas such as the ALA.\nThe code below demonstrates how you can isolate the scientific_names of taxa with missing data and searching for taxonomic information from ALA\n\n\n\nlibrary(galah)\n\n# Configure galah to point to Australia node\ngalah_config(atlas = \"Australia\",\n             email = Sys.getenv(\"ALA_EMAIL\"))\n\n# These are the taxa missing `class` information\nto_search <- inverts |> \n  filter(is.na(class)) |> \n  select(scientific_name) |> \n  distinct()\n\n# Reformat scientific_name to scientificName as the latter is the ALA format\nbackfilled_taxa <- to_search|>\n  rename(scientificName = scientific_name) |> \n  search_taxa(to_search) |> tibble()\n\nbackfilled_taxa\n\n# A tibble: 818 × 15\n   search_term  scien…¹ scien…² taxon…³ rank  match…⁴ kingdom phylum class order\n   <chr>        <chr>   <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr>\n 1 Idiosoma ma… Idioso… (Pococ… https:… spec… exactM… Animal… Arthr… Arac… Aran…\n 2 Holonuncia … Holonu… Hunt, … https:… spec… exactM… Animal… Arthr… Arac… Opil…\n 3 Trachycosmu… Trachy… Simon,… https:… spec… exactM… Animal… Arthr… Arac… Aran…\n 4 Pseudotyran… Pseudo… Beier,… https:… spec… exactM… Animal… Arthr… Arac… Pseu…\n 5 Phryganopor… Phryga… (L. Ko… https:… spec… exactM… Animal… Arthr… Arac… Aran…\n 6 Latrodectus… Latrod… Thorel… https:… spec… exactM… Animal… Arthr… Arac… Aran…\n 7 Ascoschoeng… Ascosc… (Hirst… https:… spec… exactM… Animal… Arthr… Arac… Trom…\n 8 Chrestobunu… Chrest… Hickma… https:… spec… exactM… Animal… Arthr… Arac… Opil…\n 9 Supunna pic… Nyssus… Walcke… https:… spec… exactM… Animal… Arthr… Arac… Aran…\n10 Tasmanicosa… Tasman… (Thore… https:… spec… exactM… Animal… Arthr… Arac… Aran…\n# … with 808 more rows, 5 more variables: family <chr>, genus <chr>,\n#   species <chr>, issues <chr>, vernacular_name <chr>, and abbreviated\n#   variable names ¹​scientific_name, ²​scientific_name_authorship,\n#   ³​taxon_concept_id, ⁴​match_type\n\n\n\n\nInsufficient taxonomic rank\nIf a record is not identified down to the taxonomic level that needed for the study e.g. species, then the record should be removed.\nDuring your data download, ensure you have requested for the column taxonRank, this variable tells us the lowest level of scientificName.\n\nlibrary(galah)\n\ngalah_config(email = Sys.getenv(\"ALA_EMAIL\"),\n             atlas = \"Australia\")\n\nhoneyeaters <- galah_call() |> \n  galah_identify(\"Meliphagidae\") |> \n  galah_filter(year == 2012 & stateProvince == \"New South Wales\") |> \n  galah_select(group = \"basic\", taxonRank) |> \n  atlas_occurrences()\n\nhoneyeaters$taxonRank |> unique()\n\nhoneyeaters |> filter(taxonRank == \"species\")\n\n\nlibrary(arrow)\nlibrary(dplyr)\n\n# honeyeaters <- galah_call() |>\n#   galah_identify(\"Meliphagidae\") |>\n#   galah_filter(year == 2012 & stateProvince == \"New South Wales\") |>\n#   galah_select(group = \"basic\", taxonRank) |>\n#   atlas_occurrences()\n\n# write_parquet(honeyeaters, \"data/galah/honeyeater\")\n\nhoneyeaters <- open_dataset(\"data/galah/honeyeater\") |> collect()\n\nhoneyeaters$taxonRank |> unique()\n\n[1] \"species\"    \"genus\"      \"subgenus\"   \"subspecies\" \"family\"    \n\nhoneyeaters |> filter(taxonRank == \"species\")\n\n# A tibble: 43,684 × 9\n   decimal…¹ decim…² eventDate           scien…³ taxon…⁴ recor…⁵ dataR…⁶ occur…⁷\n       <dbl>   <dbl> <dttm>              <chr>   <chr>   <chr>   <chr>   <chr>  \n 1     -37.4    150. 2012-09-26 14:00:00 Meliph… https:… a03712… NSW Bi… PRESENT\n 2     -37.4    150. 2012-09-26 14:00:00 Acanth… https:… d0a6d4… NSW Bi… PRESENT\n 3     -37.4    150. 2012-04-07 14:00:00 Acanth… https:… b86299… eBird … PRESENT\n 4     -37.4    150. 2012-04-07 14:00:00 Nesopt… https:… 3dc377… eBird … PRESENT\n 5     -37.4    150. 2012-04-07 14:00:00 Phylid… https:… a011da… eBird … PRESENT\n 6     -37.4    150. 2012-04-07 14:00:00 Phylid… https:… a6d1a8… eBird … PRESENT\n 7     -37.4    150. 2012-04-07 14:00:00 Nesopt… https:… 8ca89a… eBird … PRESENT\n 8     -37.4    150. 2012-04-07 14:00:00 Phylid… https:… a47dac… eBird … PRESENT\n 9     -37.4    150. 2012-04-07 14:00:00 Melith… https:… 609ff3… eBird … PRESENT\n10     -37.4    150. 2012-04-07 14:00:00 Acanth… https:… 3309e8… eBird … PRESENT\n# … with 43,674 more rows, 1 more variable: taxonRank <chr>, and abbreviated\n#   variable names ¹​decimalLatitude, ²​decimalLongitude, ³​scientificName,\n#   ⁴​taxonConceptID, ⁵​recordID, ⁶​dataResourceName, ⁷​occurrenceStatus\n\n\n\n\nInconsistent higher taxonomy\nA great approach to detect inconsistencies in your taxonomic data is to compute counts for each level of taxonomic rank. These counts act as a check for you to verify that the data is in line with your expectation. This is particularly important when combining data from different sources where their taxonomy might vary. If you have detected inconsistencies as we have done below, you will have to correct accordingly, either by consulting a taxonomic expert or a naming authority and ensure this is reported in your methods.\n\n# Get counts for every species where they have more than 1 class\nplants |> \n  select(phylum:species, scientific_name) |> \n  distinct() |> \n  group_by(species) |> \n  summarise(n_class = length(unique(class))) |> \n  filter(n_class > 1) \n\n# A tibble: 1 × 2\n  species               n_class\n  <chr>                   <int>\n1 Allocasuarina distyla       2\n\n# Get the species that have more than 1 class\ninconsistent_taxa <- plants |> \n  select(phylum:species, scientific_name) |> \n  distinct() |> \n  group_by(species) |> \n  summarise(n_class = length(unique(class))) |> \n  filter(n_class > 1) |> \n  pull(species) \n\n# Filter species that have more than 1 class\nplants |> filter(species %in% inconsistent_taxa) |> \n  select(phylum:species, scientific_name) |> \n  arrange(species) |> \n  distinct() \n\n# A tibble: 2 × 7\n  phylum       class         order   family        genus         species scien…¹\n  <chr>        <chr>         <chr>   <chr>         <chr>         <chr>   <chr>  \n1 Tracheophyta Magnoliopsida Fagales Casuarinaceae Allocasuarina Alloca… Alloca…\n2 Tracheophyta Equisetopsida Fagales Casuarinaceae Allocasuarina Alloca… Alloca…\n# … with abbreviated variable name ¹​scientific_name"
  },
  {
    "objectID": "taxonomy.html#synonyms",
    "href": "taxonomy.html#synonyms",
    "title": "5  Taxonomy",
    "section": "5.2 Synonyms",
    "text": "5.2 Synonyms\nSynonyms is a complex issue when working with open source biodiversity data. Data infrastructures have their own taxonomic systems which may not align with researchers’ view or consistent with your chosen naming authority.\nKeeping in mind that there is no universal solution to synonymy. Best practice is to flag and correct synonyms in a clear and consistent manner. We recommend being explicit with your decisions about which names are retained and keeping a good record of the changes to aid transparency and reproducibility.\n\n{worrms}\nThe {worrms} is the R interface to the World Register of Marine Species and has a ability to cross check synonyms with their database for taxa that has an AphiaID. The function will return synonymous record(s) associated with another different AphiaID.\n\nlibrary(worrms)\n\nmarine_sp <- read_csv(\"data/worms/worms.csv\")\n\nmarine_sp |> \n  slice(7) |>\n  pull(AphiaID) |> \n  wm_synonyms()\n\n# A tibble: 1 × 27\n  AphiaID url       scien…¹ autho…² status unacc…³ taxon…⁴ rank  valid…⁵ valid…⁶\n    <int> <chr>     <chr>   <chr>   <chr>  <lgl>     <int> <chr>   <int> <chr>  \n1  453207 https://… Gonios… Walker… super… NA          220 Spec…  208785 Lupocy…\n# … with 17 more variables: valid_authority <chr>, parentNameUsageID <int>,\n#   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>,\n#   genus <chr>, citation <chr>, lsid <chr>, isMarine <int>, isBrackish <int>,\n#   isFreshwater <int>, isTerrestrial <int>, isExtinct <int>, match_type <chr>,\n#   modified <chr>, and abbreviated variable names ¹​scientificname, ²​authority,\n#   ³​unacceptreason, ⁴​taxonRankID, ⁵​valid_AphiaID, ⁶​valid_name\n\n\n\n\n{taxize}\n{taxize} allows users to search over many taxonomic data sources for species names (scientific and common) to resolve synonymy. The gnr_resolve() function matches your supplied list with up to 118 data sources including GBIF, Catalogue of Life, World Register of Marine Species and many more. The function scores how well matched your name is to these sources.\n\nlibrary(taxize)\n\n# Read in a naming authority list\nafd <- read_csv(\"data/naming/afd.csv\")\nunique(afd$VALID_NAME)\n\n [1] \"Prosphaerosyllis battiri\"         \"Clavellopsis parasargi\"          \n [3] \"Platypontonia hyotis\"             \"Palirhoeus eatoni\"               \n [5] \"Diastylis kapalae\"                \"Xenobates chinai\"                \n [7] \"Paratanais gaspodei\"              \"Paradexamine flindersi\"          \n [9] \"Prostebbingia brevicornis\"        \"Cythere lactea\"                  \n[11] \"Cythere melobesioides\"            \"Achelia transfugoides\"           \n[13] \"Halobates (Halobates) acherontis\" \"Quadraceps hopkinsi apophoretus\" \n[15] \"Anabarhynchus striatus\"           \"Australocytheridea vandenboldi\"  \n[17] \"Enigmaplax littoralis\"            \"Hyphalus insularis\"              \n[19] \"Plesiopenaeus armatus\"            \"Uroptychus brucei\"               \n[21] \"Caligus dasyaticus\"               \"Coralliophila tetragona\"         \n[23] \"Triphora alveolata\"               \"Clavus obliquatus\"               \n[25] \"Naria beckii\"                     \"Pharaonella rostrata\"            \n[27] \"Lasaea australis\"                 \"Cadulus rudmani\"                 \n[29] \"Bembicium flavescens\"             \"Mormula philippiana\"             \n[31] \"Turbonilla tiara\"                 \"Chlorodiloma crinita\"            \n[33] \"Mitrella merita\"                  \"Tritonoharpa antiquata\"          \n[35] \"Mauritia depressa dispersa\"       \"Laevidentalium zeidleri\"         \n[37] \"Conus (Harmoniconus) musicus\"     \"Marionia cyanobranchiata\"        \n[39] \"Tucetona flabellata\"              \"Neochromadora bilineata\"         \n[41] \"Desmoscolex membranosus\"          \"Echeneidocoelium indicum\"        \n[43] \"Indodidymozoon suttiei\"           \"Diploproctodaeum yosogi\"         \n[45] \"Pseudopecoelus japonicus\"         \"Pedibothrium lloydae\"            \n[47] \"Amphitethya stipitata\"            \"Pseudosuberites mollis\"          \n[49] \"Psammochela psammodes\"           \n\n# Resolve names\nresolved <- gnr_resolve(unique(afd$VALID_NAME), best_match_only = TRUE) \nresolved |> print(n = 50)\n\n# A tibble: 49 × 5\n   user_supplied_name               submitted_name         match…¹ data_…² score\n * <chr>                            <chr>                  <chr>   <chr>   <dbl>\n 1 Prosphaerosyllis battiri         Prosphaerosyllis batt… Prosph… Nation… 0.988\n 2 Clavellopsis parasargi           Clavellopsis parasargi Clavel… uBio N… 0.988\n 3 Platypontonia hyotis             Platypontonia hyotis   Platyp… Nation… 0.988\n 4 Palirhoeus eatoni                Palirhoeus eatoni      Palirh… Wikisp… 0.988\n 5 Diastylis kapalae                Diastylis kapalae      Diasty… Encycl… 0.988\n 6 Xenobates chinai                 Xenobates chinai       Xenoba… Encycl… 0.988\n 7 Paratanais gaspodei              Paratanais gaspodei    Parata… Wikisp… 0.988\n 8 Paradexamine flindersi           Paradexamine flindersi Parade… Encycl… 0.988\n 9 Prostebbingia brevicornis        Prostebbingia brevico… Proste… Encycl… 0.988\n10 Cythere lactea                   Cythere lactea         Cyther… Encycl… 0.988\n11 Cythere melobesioides            Cythere melobesioides  Cyther… Encycl… 0.988\n12 Achelia transfugoides            Achelia transfugoides  Acheli… Nation… 0.988\n13 Halobates (Halobates) acherontis Halobates (halobates)… Haloba… CU*STAR 0.999\n14 Quadraceps hopkinsi apophoretus  Quadraceps hopkinsi a… Quadra… Catalo… 0.999\n15 Anabarhynchus striatus           Anabarhynchus striatus Anabar… Encycl… 0.988\n16 Australocytheridea vandenboldi   Australocytheridea va… Austra… Encycl… 0.988\n17 Enigmaplax littoralis            Enigmaplax littoralis  Enigma… Encycl… 0.988\n18 Hyphalus insularis               Hyphalus insularis     Hyphal… Wikisp… 0.988\n19 Plesiopenaeus armatus            Plesiopenaeus armatus  Plesio… Wikisp… 0.988\n20 Uroptychus brucei                Uroptychus brucei      Uropty… Wikisp… 0.988\n21 Caligus dasyaticus               Caligus dasyaticus     Caligu… Encycl… 0.988\n22 Coralliophila tetragona          Coralliophila tetrago… Corall… Encycl… 0.988\n23 Triphora alveolata               Triphora alveolata     Tripho… uBio N… 0.988\n24 Clavus obliquatus                Clavus obliquatus      Clavus… Encycl… 0.988\n25 Naria beckii                     Naria beckii           Naria … Nation… 0.988\n26 Pharaonella rostrata             Pharaonella rostrata   Pharao… Arctos  0.988\n27 Lasaea australis                 Lasaea australis       Lasaea… Nation… 0.988\n28 Cadulus rudmani                  Cadulus rudmani        Cadulu… Encycl… 0.988\n29 Bembicium flavescens             Bembicium flavescens   Bembic… Nation… 0.988\n30 Mormula philippiana              Mormula philippiana    Mormul… Encycl… 0.988\n31 Turbonilla tiara                 Turbonilla tiara       Turbon… Encycl… 0.988\n32 Chlorodiloma crinita             Chlorodiloma crinita   Chloro… Nation… 0.988\n33 Mitrella merita                  Mitrella merita        Mitrel… Encycl… 0.988\n34 Tritonoharpa antiquata           Tritonoharpa antiquata Triton… Nation… 0.988\n35 Mauritia depressa dispersa       Mauritia depressa dis… Maurit… Nation… 0.999\n36 Laevidentalium zeidleri          Laevidentalium zeidle… Laevid… Encycl… 0.988\n37 Conus (Harmoniconus) musicus     Conus (harmoniconus) … Conus … Catalo… 0.75 \n38 Marionia cyanobranchiata         Marionia cyanobranchi… Marion… Nation… 0.988\n39 Tucetona flabellata              Tucetona flabellata    Tuceto… Encycl… 0.988\n40 Neochromadora bilineata          Neochromadora bilinea… Neochr… Nation… 0.988\n41 Desmoscolex membranosus          Desmoscolex membranos… Desmos… Encycl… 0.988\n42 Echeneidocoelium indicum         Echeneidocoelium indi… Echene… Integr… 0.988\n43 Indodidymozoon suttiei           Indodidymozoon suttiei Indodi… Nation… 0.988\n44 Diploproctodaeum yosogi          Diploproctodaeum yoso… Diplop… Encycl… 0.988\n45 Pseudopecoelus japonicus         Pseudopecoelus japoni… Pseudo… Integr… 0.988\n46 Pedibothrium lloydae             Pedibothrium lloydae   Pedibo… Encycl… 0.988\n47 Amphitethya stipitata            Amphitethya stipitata  Amphit… Wikisp… 0.988\n48 Pseudosuberites mollis           Pseudosuberites mollis Pseudo… Encycl… 0.988\n49 Psammochela psammodes            Psammochela psammodes  Psammo… Wikisp… 0.988\n# … with abbreviated variable names ¹​matched_name, ²​data_source_title\n\n# Retrieve synonyms\ntsn <- get_tsn(unique(afd$VALID_NAME)[1:5])\n\n══  5 queries  ═══════════════\n✖  Not Found:  Prosphaerosyllis battiri\n✖  Not Found:  Clavellopsis parasargi\n✔  Found:  Platypontonia hyotis\n✖  Not Found:  Palirhoeus eatoni\n✖  Not Found:  Diastylis kapalae\n══  Results  ═════════════════\n\n• Total: 5 \n• Found: 1 \n• Not Found: 4\n\nsynonyms(tsn)\n\n$<NA>\n[1] NA\n\n$<NA>\n[1] NA\n\n$`612530`\n  sub_tsn acc_tsn   syn_author                  syn_name syn_tsn\n1  612530  612530 Suzuki, 1971 Platypontonia pterostreae 1191962\n\n$<NA>\n[1] NA\n\n$<NA>\n[1] NA"
  },
  {
    "objectID": "taxonomy.html#input-from-experts",
    "href": "taxonomy.html#input-from-experts",
    "title": "5  Taxonomy",
    "section": "5.3 Input from experts",
    "text": "5.3 Input from experts\nProgrammatic solutions for resolving synonymy can only go so far. Seeking validation from experts is sensible if your goal is to obtain a high quality species list. Museums or taxonomic societies are extensive sources of knowledge. Below we have provided a list of some of Australian taxonomic society groups.\n\n5.3.1 Australian taxonomic society groups\nVERTEBRATES\n\nAmphibians and reptiles - Australian Herpetological Society\n\nBirds - Birdlife Australia\n\nFish - Australian Society for Fish Biology\n\nMammals - The Australian Mammal Society\n\nINVERTEBRATES\n\nArachnology - Australasian Arachnological Society\n\nEntomology - Australian Entomological Society\n\nMalacology - The Malacological Society of Australasia\n\nNematology - Australasian Association of Nematologists\n\n\n\n5.3.2 Global taxonomy\n\nGBIF uses 100 different sources to assemble - their global taxonomic backbone\nAuthoritative taxonomic information on plants, animals, fungi, and microbes - Integrated Taxonomic Information System, ITIS\nGlobal taxonomic catalogue\nCatalogue of Life\n\n\n\n\n\nGarraffoni, André RS, Thiago Q Araújo, Anete P Lourenço, Loretta Guidi, and Maria Balsamo. 2019. “Integrative Taxonomy of a New Redudasys Species (Gastrotricha: Macrodasyida) Sheds Light on the Invasion of Fresh Water Habitats by Macrodasyids.” Scientific Reports 9 (1): 2067."
  },
  {
    "objectID": "spatial.html",
    "href": "spatial.html",
    "title": "7  Spatial data",
    "section": "",
    "text": "8 Notes"
  },
  {
    "objectID": "spatial.html#quick-visualisation",
    "href": "spatial.html#quick-visualisation",
    "title": "7  Spatial data",
    "section": "7.1 Quick visualisation",
    "text": "7.1 Quick visualisation\nOne of the most straightforward ways to check for spatial errors is to plot your data onto a map. More obvious spatial errors are much easier to spot visually."
  },
  {
    "objectID": "spatial.html#coordinate-precision",
    "href": "spatial.html#coordinate-precision",
    "title": "7  Spatial data",
    "section": "7.2 Coordinate precision",
    "text": "7.2 Coordinate precision\nData from different sources are collected by different people often using differing tools. For example, some might record coordinates with a tool with high precision like a phone or a GPS, whereas others might record coordinates with low precision by manually recording a place name or writing coordinates after the fact.\nDepending on the level of precision to answer your research question,  you might consider discarding data of lower precision, or removing decimal places for data you know could not be that precise. At the ALA there is a “cooridnateprecision”/ “coordinateUncertainityIn Meters” assertion (see assertion section to download these with the data)\n\nhttps://xkcd.wtf/2170/\nCoordinate precision below 100km represents the grain size of many macroecological analyses (Zizka et al. 2020). Some studies have used a cut-off of spatial resolution >25,000m or precision with less than three decimal places (Godfree et al. 2021). It is important to note that rasterized collections often have a significant proportion of records that might have low coordinate precision. Understanding the level of quality you need is important before removing/keeping large volumes of data.\n\n# How to filter by number of decimal places"
  },
  {
    "objectID": "spatial.html#coordinate-correction",
    "href": "spatial.html#coordinate-correction",
    "title": "7  Spatial data",
    "section": "7.3 Coordinate correction",
    "text": "7.3 Coordinate correction\nSome of these steps may have been completed in a pre-cleaning step, however it’s now time to be more rigorous. As always we’ll start with fixing data before discarding, many coordinates issues can be solved with data manipulation instead of discarding:\nFlipped coordinates: Flipped coordinates typically appear as a clustering of points, whereby swapping the latitude and longitude will place the coordinates where they are expected. (Jin and Yang 2020)\n\n#example map of some flipped coordinates (what to look for) \n# https://www.gbif.org/occurrence/3013406216 this has flipped coordinates, which GBIF has corrected\n# https://www.gbif.org/occurrence/search?q=mammalia&continent=SOUTH_AMERICA&has_coordinate=true&has_geospatial_issue=false&issue=PRESUMED_SWAPPED_COORDINATE&advanced=1. ## the issue and flag is called 'presumed swapped coordinate' \n\nNumerical sign confusion: As with flipped coordinates, if there is a clustering of points mirrored to another hemisphere, consider swapping the sign and correct rather than discarding the points.\n\n#example map, like coordinates off the coast of japan\n\n# https://biocache.ala.org.au/occurrences/search?q=lsid%3Ahttps%3A%2F%2Fid.biodiversity.org.au%2Ftaxon%2Fapni%2F51360942&qualityProfile=CSDM&radius=50&lat=35.66845370835343&lon=138.9990234375#tab_recordsView\n\n# eucs <- galah_call() %>% \n#  galah_identify(\"Eucalyptus\") %>%\n#  galah_filter( year == 2005, \n#             dataResourceName == \"The University of Melbourne Herbarium (MELU) AVH data\") %>%\n#  atlas_occurrences()\n\nCountry field doesn’t match coordinates: The coordinates could be wrong or just the country listed.\n\n## this doesnt seem to be very common- atleast not in ALA data- because there is no neighboring country\n# https://biocache.ala.org.au/occurrences/a34fca43-9e7c-4b37-8fe4-07cc18369465 Australian coordinates, country listed as Trinidad and Tobago\n# https://www.gbif.org/occurrence/search?advanced=true&continent=SOUTH_AMERICA&geometry=POLYGON((-78.74961%20-8.25249,-76.29838%20-8.25249,-76.29838%20-4.74121,-78.74961%20-4.74121,-78.74961%20-8.25249))&has_coordinate=true&issue=COUNTRY_MISMATCH&locale=en&q=reptilia   # GBIF example- reptiles located in Peru, originally recorded as Ecuador"
  },
  {
    "objectID": "spatial.html#coordinate-cleaning",
    "href": "spatial.html#coordinate-cleaning",
    "title": "7  Spatial data",
    "section": "7.4 Coordinate cleaning",
    "text": "7.4 Coordinate cleaning\nOnce you have fixed everything you can, it’s time to remove records that still have errors. This doesn’t mean removing all outliers, you must have more than “it’s far away from the others” to justify a records removal.\nRemove records with null or missing coordinates: This will be records missing partial or complete information. Missing values can cause errors, many analytical tools do not respond well to missing values. If you can’t find the information elsewhere, it’s best to remove it.\nRemove records where longitude and latitude are equal: High likelihood that this is not where the record was recorded and, check first, however likely will need to remove\nRemove records with zero coordinates: When plotting it on a map, zero coordinates will be found around the point at zero latitudes and longitudes. These records will not accurately represent their valid location and must be removed.\n\n#zero coordinates acacia \n\n#https://biocache.ala.org.au/occurrences/search?q=lsid%3Ahttps%3A%2F%2Fid.biodiversity.org.au%2Ftaxon%2Fapni%2F51382879&disableAllQualityFilters=true&qualityProfile=ALA&fq=spatiallyValid%3A%22false%22&radius=25&lat=-0.024032592068740033&lon=-0.06591796875#tab_recordsView \n\n\n\n\nRemove records plotted away from the known area of distribution of the species. It is essential to check the metadata to ensure that it is a data entry error and not a real outlier. In some cases, it’s worth checking the literature before discarding records like these. These can also be mis-identified species, if you’re working with data from many species, and you find a species point in amongst the environmental bounds of a similar looking species it might be worth going back to the original record and taking a closer look. However, if no images exist it might be difficult to determine if it is a taxonomic or spatial issue.There are several ways of dealing with this issue, but one option can be to mask data to remove points from falling off a determined area. –> unsure about this bit\nI’m not sure I understand what the above means. But I think in general for less obvious errors, it’s best to suggest that before data analysis (and honestly, before seeing the data at all), people should determine whether there is an upper bound to remove coordinates (like a 95% confidence interval, or within xx km of an accepted expert distribution). Then run whatever model or test with the complete data and with the reduced data. If it makes a difference, probably make an informed decision based on literature of which results to use as the “main” findings.\nHaving written this out, a brief discussion about this rather than any suggestions is probably all that’s in scope for this book\nThe final decisions depend on the species, research question, model parameters etc"
  },
  {
    "objectID": "spatial.html#optional-record-removal",
    "href": "spatial.html#optional-record-removal",
    "title": "7  Spatial data",
    "section": "7.5 Optional record removal",
    "text": "7.5 Optional record removal\nNot sure why the below is optional? I think a lot of national or global analyses would require some kind of data cleaning for this\nRemove records with coordinates assigned to country and province centroids: such as Centre of Country, botanic gardens, zoos, country capitals, biodiversity institutions, urban areas, and gbif headquarters. In some cases these records will haven actually been recorded at a zoo for example, in other cases this is often incorrectly georeferenced records. They can be tricky to spot but there are a few packages that deal with centroid data. Exploratory visuals can also help support findings, making it easier to spot clusterings of points.\nCentroids are common when records are being assigned from georeferencing based on vague locality descriptions or from incorrect georeferencing. Sometimes, records are erroneously entered with the physical location of the specimen or because they represent individuals from captivity or horticulture, which were not clearly labeled as such.\nIn a few cases, zoos and botanic gardens might be where the record was sighted. However, in this case, it is not naturally occurring and should be removed. Records in urban areas may not want to be removed by everyone, but it is essential to note that it could be old data or have vague locality descriptions.\nRemove records outside of the country of interest: In some cases, records outside the country of origin may be outliers. In other cases, they may be perfectly valid. It is important to analyze case-by-case and remove the record if necessary."
  },
  {
    "objectID": "spatial.html#checklist-of-data-standardization",
    "href": "spatial.html#checklist-of-data-standardization",
    "title": "7  Spatial data",
    "section": "7.6 Checklist of data standardization",
    "text": "7.6 Checklist of data standardization"
  },
  {
    "objectID": "spatial.html#missing-data",
    "href": "spatial.html#missing-data",
    "title": "7  Spatial data",
    "section": "8.1 Missing data",
    "text": "8.1 Missing data\n(I wonder if this is really the place for this or better to just do this in the Spatial chapter)\n\nRemove records with no coordinates"
  },
  {
    "objectID": "spatial.html#quick-visualiations",
    "href": "spatial.html#quick-visualiations",
    "title": "7  Spatial data",
    "section": "8.2 Quick visualiations",
    "text": "8.2 Quick visualiations\nA graphic plot of your data can be very telling and can help you spot potential errors that may be due to formatting.\n\n8.2.1 GGally\nA visual inspection of your entire dataset can save time and solve easy-to-spot errors.\n\n\n8.2.2 Quick map\n(I wonder if this is really the place for this or better to just do this in the Spatial chapter)\nA simple way to visualize your data is to plot it on a map.\n\nFix minor coordinates errors, such as inverted or badly formatted\n\n\n\n\n\n\n8.2.3 \n\n\n8.2.4 CoordinateCleaner\n\n\n\n\n\n\n\n\nGodfree, Robert C., Nunzio Knerr, Francisco Encinas-Viso, David Albrecht, David Bush, D. Christine Cargill, Mark Clements, et al. 2021. “Implications of the 20192020 Megafires for the Biogeography and Conservation of Australian Vegetation.” Nature Communications 12 (1): 1023. https://doi.org/10.1038/s41467-021-21266-5.\n\n\nJin, Jing, and Jun Yang. 2020. “BDcleaner: A Workflow for Cleaning Taxonomic and Geographic Errors in Occurrence Data Archived in Biodiversity Databases.” Global Ecology and Conservation 21 (March): e00852. https://doi.org/10.1016/j.gecco.2019.e00852.\n\n\nZizka, Alexander, Fernanda Antunes Carvalho, Alice Calvente, Mabel Rocio Baez-Lizarazo, Andressa Cabral, Jéssica Fernanda Ramos Coelho, Matheus Colli-Silva, Mariana Ramos Fantinati, Moabe F Fernandes, and Thais Ferreira-Araújo. 2020. “No One-Size-Fits-All Solution to Clean GBIF.” PeerJ 8: e9916."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "ALA Data Cleaning",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThis book was inspired by an Australian Research Data Commons project where our team worked closely with research partners to streamline their data cleaning workflows. This book is a collaborative effort from the Science and Decision Support team at the Atlas of Living Australia (ALA)\nAuthors listed in alphabetic order:\n- Fonti Kar\n- Jessica Fenker\n- Margot Schneider\n- Martin Westgate"
  },
  {
    "objectID": "intro.html#what-you-will-learn-book-outline",
    "href": "intro.html#what-you-will-learn-book-outline",
    "title": "1  Introduction",
    "section": "1.1 What you will learn: Book outline",
    "text": "1.1 What you will learn: Book outline\n\n\n# new diagram here\nlibrary(DiagrammeR)\n\nTo begin working with open access data we’ll teach you how to:\n\nNarrow your data scope\nImport data\nTidy and familiarise yourself with metadata\n\nOnce data have been imported and formatted correctly we’ll dive into the major cleaning steps. We will focus on how to deal with taxonomic and spatial issues with biodiversity or species occurrence data.\n\nWe will start with taxonomic issues\n\nTaxonomic issues\n\nnaming authorities\nsynonyms\nDuplicates\n\nSpatial data\n\nOutliers\nDuplicates"
  },
  {
    "objectID": "intro.html#what-you-will-learn",
    "href": "intro.html#what-you-will-learn",
    "title": "1  Introduction",
    "section": "1.1 What you will learn",
    "text": "1.1 What you will learn\n\n\n# new diagram here\nlibrary(DiagrammeR)\n\nTo begin working with open access data we’ll teach you how to:\n\nNarrow your data scope\nImport data\nTidy and familiarise yourself with metadata\n\nOnce data have been imported and formatted correctly we’ll dive into the major cleaning steps. We will focus on how to deal with taxonomic and spatial issues with biodiversity or species occurrence data.\n\nWe will start with taxonomic issues\n\nTaxonomic issues\n\nnaming authorities\nsynonyms\nDuplicates\n\nSpatial data\n\nOutliers\nDuplicates"
  },
  {
    "objectID": "intro.html#what-you-will-learn-outline",
    "href": "intro.html#what-you-will-learn-outline",
    "title": "1  Introduction",
    "section": "1.1 What you will learn (Outline)",
    "text": "1.1 What you will learn (Outline)\n\n\n# new diagram here\nlibrary(DiagrammeR)\n\nTo begin working with open access data we’ll teach you how to:\n\nNarrow your data scope\nImport data\nTidy and familiarise yourself with metadata\n\nOnce data have been imported and formatted correctly we’ll dive into the major cleaning steps. We will focus on how to deal with taxonomic and spatial issues with biodiversity or species occurrence data.\n\nWe will start with taxonomic issues\n\nTaxonomic issues\n\nnaming authorities\nsynonyms\nDuplicates\n\nSpatial data\n\nOutliers\nDuplicates"
  }
]